{"mappings":"AAAC,IAASA,ECAT,MACC,MAAMC,EAAaC,SAASC,cAAc,sBACpCC,EAAcF,SAASC,cAAc,iBACrCE,EAAeH,SAASC,cAAc,kBACtCG,EAAiBJ,SAASC,cAAc,WACxCI,EAAiBL,SAASC,cAAc,aACxCK,EAAmBN,SAASC,cAAc,aAC1CM,EAAgBP,SAASC,cAAc,gBAEvCO,EAAa,KACjB,MAAMC,EAC0C,SAA9CP,EAAYQ,aAAa,mBAA+B,EAC1DR,EAAYS,aAAa,iBAAkBF,GAC3CV,EAAWa,UAAUC,OAAO,WAK5BC,eAH0BL,EAEtB,mBADA,qBAE6BT,SAASe,KAAK,EAGjDb,EAAYc,iBAAiB,QAASR,GACtCL,EAAaa,iBAAiB,QAASR,GACvCJ,EAAeY,iBAAiB,QAASR,GACzCH,EAAeW,iBAAiB,QAASR,GACzCF,EAAiBU,iBAAiB,QAASR,GAC3CD,EAAcS,iBAAiB,QAASR,GAGxCS,OAAOC,WAAW,sBAAsBF,iBAAiB,UAAUG,IAC5DA,EAAEC,UACPrB,EAAWa,UAAUS,OAAO,WAC5BnB,EAAYS,aAAa,iBAAiB,GAC1CG,eAAeQ,iBAAiBtB,SAASe,MAAK,GAEjD,EAnCA,GDAY,mBAAHjB,EAA6XmB,OAAOM,QAAQC,WAApXJ,UAAUtB,EAAEsB,QAAQtB,EAAE2B,mBAAmB3B,EAAE4B,oBAAoB5B,EAAE6B,uBAAuB,SAASR,GAAG,IAAI,IAAIS,EAAEC,KAAKC,GAAGF,EAAE5B,UAAU4B,EAAEG,eAAeC,iBAAiBb,GAAGc,EAAE,EAAEH,EAAEG,IAAIH,EAAEG,KAAKL,KAAKK,EAAE,OAAOC,QAAQJ,EAAEG,G,GAAM,mBAAmBnC,EAAEqC,UAAUrC,EAAEqC,QAAQ,SAAShB,GAAG,IAAI,IAAIS,EAAEC,KAAKD,GAAG,IAAIA,EAAEQ,UAAU,CAAC,GAAGR,EAAER,QAAQD,GAAG,OAAOS,EAAEA,EAAEA,EAAES,U,CAAW,OAAO,I,GAG/XrC,SAASgB,iBAAiB,oBAAoB,W,kDAIvCsB,EAAetC,SAASC,cAAiB,qBACzCsC,EAAuBvC,SAACgC,iBAAc,mBAI1CQ,EAAAC,SAA8B,SACRC,GAEnBA,EAAA1B,iBAAA,kBACIG,G,yDASanB,SAAKC,cAAa,sBAChB0C,EAAS,M,wBAMML,EAAR1B,UAAVgC,IAAJ,S,OAM4BL,EAAbE,SAAR,SAATC,GAE2BA,EAAL1B,iBAAjB,SAAT,SAATG,GACmBU,KAALM,QAAR,UAEmBvB,UAAVS,OAAP,UAC6BiB,EAAR1B,UAAVS,OAAP,S,OAM8BrB,SAATe,KAALC,iBAAjB,SAAT,SAAAG,GAGyB,IAFCA,EAAF0B,UAIQ7C,SAATC,cAAd,iBAAXW,UAAUS,OAAO,UACiBrB,SAATC,cAAd,aAAbW,UAAQS,OAAO,U,IAE0B,GAGGiB,EAARtB,iBAAjB,SAAT,WAC8BhB,SAATC,cAAd,iBAAjBW,UAAQS,OAAO,UACyBQ,KAALjB,UAAVS,OAAP,S,OE/DnByB,IAAIC,KAAM,CACNC,MAAM","sources":["src/js/modals.js","src/js/mobile-menu.js","src/js/scroll-anim.js"],"sourcesContent":["!function(e){\"function\"!=typeof e.matches&&(e.matches=e.msMatchesSelector||e.mozMatchesSelector||e.webkitMatchesSelector||function(e){for(var t=this,o=(t.document||t.ownerDocument).querySelectorAll(e),n=0;o[n]&&o[n]!==t;)++n;return Boolean(o[n])}),\"function\"!=typeof e.closest&&(e.closest=function(e){for(var t=this;t&&1===t.nodeType;){if(t.matches(e))return t;t=t.parentNode}return null})}(window.Element.prototype);\n\n\ndocument.addEventListener('DOMContentLoaded', function() {\n\n   /* Записываем в переменные массив элементов-кнопок и подложку.\n      Подложке зададим id, чтобы не влиять на другие элементы с классом overlay*/\n   var modalButtons = document.querySelectorAll('.js-open-modal'),\n       overlay      = document.querySelector('.js-overlay-modal'),\n       closeButtons = document.querySelectorAll('.js-modal-close');\n\n\n   /* Перебираем массив кнопок */\n   modalButtons.forEach(function(item){\n\n      /* Назначаем каждой кнопке обработчик клика */\n      item.addEventListener('click', function(e) {\n\n         /* Предотвращаем стандартное действие элемента. Так как кнопку разные\n            люди могут сделать по-разному. Кто-то сделает ссылку, кто-то кнопку.\n            Нужно подстраховаться. */\n         e.preventDefault();\n\n         /* При каждом клике на кнопку мы будем забирать содержимое атрибута data-modal\n            и будем искать модальное окно с таким же атрибутом. */\n         var modalId = this.getAttribute('data-modal'),\n             modalElem = document.querySelector('.modal[data-modal=\"' + modalId + '\"]');\n\n\n         /* После того как нашли нужное модальное окно, добавим классы\n            подложке и окну чтобы показать их. */\n         modalElem.classList.add('active');\n         overlay.classList.add('active');\n      }); // end click\n\n   }); // end foreach\n\n\n   closeButtons.forEach(function(item){\n\n      item.addEventListener('click', function(e) {\n         var parentModal = this.closest('.modal');\n\n         parentModal.classList.remove('active');\n         overlay.classList.remove('active');\n      });\n\n   }); // end foreach\n\n\n    document.body.addEventListener('keyup', function (e) {\n        var key = e.keyCode;\n\n        if (key == 27) {\n\n            document.querySelector('.modal.active').classList.remove('active');\n            document.querySelector('.backdrop').classList.remove('active');\n        };\n    }, false);\n\n\n    overlay.addEventListener('click', function() {\n        document.querySelector('.modal.active').classList.remove('active');\n        this.classList.remove('active');\n    });\n\n\n\n\n}); // end ready","(() => {\n  const mobileMenu = document.querySelector('.js-menu-container');\n  const openMenuBtn = document.querySelector('.js-open-menu');\n  const closeMenuBtn = document.querySelector('.js-close-menu');\n  const anchorOneClose = document.querySelector('.anchor');\n  const anchorTwoClose = document.querySelector('.anchor-2');\n  const anchorThreeClose = document.querySelector('.anchor-3');\n  const btnModalClose = document.querySelector('.modal-close');\n\n  const toggleMenu = () => {\n    const isMenuOpen =\n      openMenuBtn.getAttribute('aria-expanded') === 'true' || false;\n    openMenuBtn.setAttribute('aria-expanded', !isMenuOpen);\n    mobileMenu.classList.toggle('is-open');\n\n    const scrollLockMethod = !isMenuOpen\n      ? 'disableBodyScroll'\n      : 'enableBodyScroll';\n    bodyScrollLock[scrollLockMethod](document.body);\n  };\n\n  openMenuBtn.addEventListener('click', toggleMenu);\n  closeMenuBtn.addEventListener('click', toggleMenu);\n  anchorOneClose.addEventListener('click', toggleMenu);\n  anchorTwoClose.addEventListener('click', toggleMenu);\n  anchorThreeClose.addEventListener('click', toggleMenu);\n  btnModalClose.addEventListener('click', toggleMenu);\n\n  // Close the mobile menu on wider screens if the device orientation changes\n  window.matchMedia('(min-width: 768px)').addEventListener('change', e => {\n    if (!e.matches) return;\n    mobileMenu.classList.remove('is-open');\n    openMenuBtn.setAttribute('aria-expanded', false);\n    bodyScrollLock.enableBodyScroll(document.body);\n  });\n})();\n\n","AOS.init( {\n    once: true,\n});"],"names":["e1","mobileMenu","document","querySelector","openMenuBtn","closeMenuBtn","anchorOneClose","anchorTwoClose","anchorThreeClose","btnModalClose","toggleMenu","isMenuOpen","getAttribute","setAttribute","classList","toggle","bodyScrollLock","body","addEventListener","window","matchMedia","e","matches","remove","enableBodyScroll","Element","prototype","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","t","this","o","ownerDocument","querySelectorAll","n","Boolean","closest","nodeType","parentNode","overlay","closeButtons","modalButtons","forEach","item","modalId","add","keyCode","AOS","init","once"],"version":3,"file":"index.8b8c1071.js.map"}